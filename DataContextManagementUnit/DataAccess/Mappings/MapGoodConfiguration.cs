//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework DbContext template.
// Code is generated on: 05.10.2020 13:35:37
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.Data.Entity.ModelConfiguration;

namespace DataContextManagementUnit.DataAccess.Contexts.Edi.Mapping
{

    public partial class MapGoodConfiguration : EntityTypeConfiguration<MapGood>
    {

        public MapGoodConfiguration()
        {
            this
                .HasKey(p => p.Id)
                .ToTable("MAP_GOODS", "EDI");
            // Properties:
            this
                .Property(p => p.Id)
                    .HasColumnName(@"ID")
                    .IsRequired()
                    .HasMaxLength(36)
                    .HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None)
                    .IsUnicode(false);
            this
                .Property(p => p.IdGood)
                    .HasColumnName(@"ID_GOOD");
            this
                .Property(p => p.BarCode)
                    .HasColumnName(@"BAR_CODE")
                    .HasMaxLength(128)
                    .IsUnicode(false);
            this
                .Property(p => p.Name)
                    .HasColumnName(@"NAME")
                    .HasMaxLength(550)
                    .IsUnicode(true);
            this
                .HasMany( m => m.MapGoodByBuyers )
                    .WithRequired( b => b.MapGood )
                .HasForeignKey( b => b.IdMapGood )
                    .WillCascadeOnDelete( false );
            OnCreated();
        }

        partial void OnCreated();

    }
}
