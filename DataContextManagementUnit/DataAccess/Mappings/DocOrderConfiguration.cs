//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework DbContext template.
// Code is generated on: 05.10.2020 13:35:37
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.Data.Entity.ModelConfiguration;

namespace DataContextManagementUnit.DataAccess.Contexts.Edi.Mapping
{

    public partial class DocOrderConfiguration : EntityTypeConfiguration<DocOrder>
    {

        public DocOrderConfiguration()
        {
            this
                .HasKey(p => p.Id)
                .ToTable("DOC_ORDERS", "EDI");
            // Properties:
            this
                .Property(p => p.Id)
                    .HasColumnName(@"ID")
                    .IsRequired()
                    .HasMaxLength(128)
                    .HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None)
                    .IsUnicode(false);
            this
                .Property(p => p.Number)
                    .HasColumnName(@"NUMBER")
                    .HasMaxLength(512)
                    .IsUnicode(false);
			this
				.Property( p => p.OrderDate )
					.HasColumnName( @"ORDER_DATE" )
					.HasPrecision( 0 );
			this
                .Property(p => p.DocType)
                    .HasColumnName(@"DOC_TYPE")
                    .HasMaxLength(20)
                    .IsUnicode(false);
            this
                .Property(p => p.IsTest)
                    .HasColumnName(@"IS_TEST")
                    .HasMaxLength(1)
                    .IsFixedLength()
                    .IsUnicode(false);
            this
                .Property(p => p.EdiCreationDate)
                    .HasColumnName(@"EDI_CREATION_DATE")
                    .HasPrecision(0);
            this
                .Property(p => p.EdiCreationSenderDate)
                    .HasColumnName(@"EDI_CREATION_SENDER_DATE")
                    .HasPrecision(0);
            this
                .Property(p => p.ReqDeliveryDate)
                    .HasColumnName(@"REQ_DELIVERY_DATE")
                    .HasPrecision(0);
            this
                .Property(p => p.GlnSender)
                    .HasColumnName(@"GLN_SENDER")
                    .IsRequired()
                    .HasMaxLength(16)
                    .IsUnicode(false);
            this
                .Property(p => p.GlnSeller)
                    .HasColumnName(@"GLN_SELLER")
                    .IsRequired()
                    .HasMaxLength(16)
                    .IsUnicode(false);
            this
                .Property(p => p.GlnBuyer)
                    .HasColumnName(@"GLN_BUYER")
                    .IsRequired()
                    .HasMaxLength(16)
                    .IsUnicode(false);
            this
                .Property(p => p.GlnShipTo)
                    .HasColumnName(@"GLN_SHIP_TO")
                    .IsRequired()
                    .HasMaxLength(16)
                    .IsUnicode(false);
            this
                .Property(p => p.NameShipTo)
                    .HasColumnName(@"NAME_SHIP_TO")
                    .HasMaxLength(512)
                    .IsUnicode(false);
            this
                .Property(p => p.AddressShipTo)
                   .HasColumnName(@"ADDRESS_SHIP_TO")
                   .HasMaxLength(512)
                   .IsUnicode(false);
            this
                .Property(p => p.Comment)
                    .HasColumnName(@"COMMENT")
                    .HasMaxLength(512)
                    .IsUnicode(false);
            this
                .Property(p => p.CurrencyCode)
                    .HasColumnName(@"CURRENCY_CODE")
                    .HasMaxLength(8)
                    .IsUnicode(false);
            this
                .Property(p => p.TotalAmount)
                    .HasColumnName(@"TOTAL_AMOUNT")
                    .HasMaxLength(20)
                    .IsUnicode(false);
            this
                .Property(p => p.TotalVatAmount)
                    .HasColumnName(@"TOTAL_VAT_AMOUNT")
                    .HasMaxLength(20)
                    .IsUnicode(false);
            this
                .Property(p => p.TotalSumExcludeTax)
                    .HasColumnName(@"TOTAL_SUM_EXCLUDE_TAX")
                    .HasMaxLength(20)
                    .IsUnicode(false);
            this
                .Property(p => p.Status)
                    .HasColumnName(@"STATUS")
                    .IsRequired();
            this
                .Property(p => p.IsMarkedNotExportable)
                    .HasColumnName(@"IS_MARKED_NOT_EXPORTABLE")
                    .IsRequired();
            this
                .Property(p => p.OrderDeliveryDate)
                    .HasColumnName(@"ORDER_DELIVERY_DATE")
                    .HasPrecision(0);
            // Associations:
            this
                .HasMany(p => p.DocLineItems)
                    .WithRequired(c => c.DocOrder)
                .HasForeignKey(p => p.IdOrder)
                    .WillCascadeOnDelete(false);
            this
                .HasMany(p => p.LogOrders)
                    .WithRequired(c => c.DocOrder)
                .HasForeignKey(p => p.IdOrder)
                    .WillCascadeOnDelete(false);
            OnCreated();
        }

        partial void OnCreated();

    }
}
